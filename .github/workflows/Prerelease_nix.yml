name: DPOcean Auto-release Linux

on:
  push:
    branches:
    - dev

jobs:

  linux-build:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Shortify commit sha
        shell: bash
        run: echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
        id: shortify_commit

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install deps (Linux)
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -q autoconf automake bsdmainutils build-essential g++-multilib libc6-dev libcurl4-gnutls-dev libtool ncurses-dev bison unzip zlib1g-dev -y

      - name: Build (Linux)
        run: |
          ./zcutil/build.sh
          mv src/qt/komodo-qt src/qt/DP-qt-linux
          zip --junk-paths DP-qt-linux src/qt/DP-qt-linux
      - name: Upload DP-qt-linux.zip as artifact
        uses: actions/upload-artifact@v1
        with:
          name: DP-qt-linux
          path: ./DP-qt-linux.zip

  publish-release:
      name: Publishing CD releases
      runs-on: ubuntu-latest
      needs: linux-build
      steps:
        - name: Download DP-qt-linux.zip
          uses: actions/download-artifact@v1
          with:
            name: DP-qt-linux  

        - name: Extract branch name
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: extract_branch

        - name: Shortify commit sha
          shell: bash
          run: echo "##[set-output name=sha_short;]$(echo ${GITHUB_SHA::7})"
          id: shortify_commit

        - name: Create Release
          id: create_release
          uses: actions/create-release@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: release_${{ steps.shortify_commit.outputs.sha_short }}
            release_name: Linux Prerelease at ${{ steps.shortify_commit.outputs.sha_short }}
            draft: false
            prerelease: true

        - name: Upload Linux Release Asset
          id: upload-linux-release-asset 
          uses: actions/upload-release-asset@latest
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} 
            asset_path: DP-qt-linux/DP-qt-linux.zip
            asset_name: ${{ steps.shortify_commit.outputs.sha_short }}_DP_linux.zip
            asset_content_type: application/zip
